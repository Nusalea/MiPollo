{"version":3,"sources":["context/DateContext.js","components/AppBar/index.js","components/SideBar/index.js","context/DateState.js","components/ModalForm/styles.js","components/ModalForm/index.js","hooks/useForm.js","environments/environment.js","services/clienteService.js","pages/Clientes/hooks/useOpen.js","pages/Clientes/components/ModalCliente.js","hooks/useClientes.js","pages/Clientes/components/ModalClienteEditar.js","pages/Clientes/components/TablaCliente.js","pages/Clientes/index.js","services/paymentSheetService.js","pages/HojaPagos/styles.js","pages/HojaPagos/index.js","services/hojaPedidosService.js","pages/HojaPedido/hooks.js","pages/HojaPedido/styles.js","pages/HojaPedido/index.js","services/orderSheetService.js","pages/ImportarPedidos/index.js","styles.js","App.js","index.js"],"names":["DateContext","createContext","useStyles","makeStyles","theme","appBar","zIndex","drawer","toolbar","display","justifyContent","alignItems","datePicker","backgroundColor","borderRadius","padding","AppBarCustom","classes","useContext","fecha","handleChangeFecha","AppBar","position","className","Toolbar","TextField","type","value","InputLabelProps","shrink","onChange","root","width","flexShrink","drawerPaper","listItem","SideBar","Drawer","variant","open","paper","Divider","List","to","ListItem","button","ListItemIcon","ListItemText","primary","DateState","children","useState","setFecha","useEffect","localStorage","getItem","hoyParsed","Date","toLocaleString","year","month","day","split","reverse","join","Provider","e","target","setItem","modal","boxShadow","shadows","spacing","flexDirection","modalContainer","form","flexWrap","margin","ModalForm","handleOpen","handleSubmit","titleForm","Modal","onClose","aria-labelledby","aria-describedby","Card","id","onSubmit","useForm","initialState","edit","setForm","handleChange","prop","checked","limpiarForm","URL_BACKEND","URL_BACKEND_LOCAL","getClientes","a","axios","get","rpta","getClientesActive","getClientesPaymentSheet","postCliente","objCliente","post","JSON","stringify","headers","putCliente","put","useOpen","setOpen","formVacio","nombre","price","estado","paymentSheet","joinActive","camal","client","ModalCliente","addCliente","Button","color","onClick","preventDefault","then","request","status","data","label","InputProps","startAdornment","InputAdornment","FormControlLabel","control","Switch","name","useClientes","mode","clientes","setClientes","loadClientesActive","catch","err","parse","loadClientesPaymentSheet","loadAllClientes","ModalClienteEditar","loadClientes","clienteEdit","TablaCliente","setClienteEdit","TableContainer","Table","size","aria-label","TableHead","TableRow","map","cellHead","TableCell","TableBody","cliente","i","column","j","ClientesView","openEdit","handleOpenEdit","getPaymentSheetByDate","postPaymentSheet","objPaymentSheet","putPaymentSheet","containerButtons","gap","table","row0","row1","row2","row3","bodyCell","inputCell","hojaPagosVacia","importePerla","totalPagos","pagosFalto","saldoAnterior","pollosMuertos","saldoActual","HojaPagos","pagos","setPagos","hojaPagos","setHojaPagos","hojaRef","useRef","hojaPagosCopy","calcularSaldo","saldo","isNaN","parseFloat","toFixed","leerPago","pagoString","total","trim","toLowerCase","forEach","pago","res","pagosTemp","hojaPagosTemp","length","yesterday","setDate","getDate","toISOString","resYesterday","console","log","reduce","acc","removeItem","trigger","content","current","ref","pagosCopy","nuevoTotalPago","handleChangePago","disabled","getOrderSheetByDate","postOrderSheet","objOrderSheet","putOrderSheet","hojaVacia","queda","HojaPedido","hojaPedido","setHojaPedido","pedidos","setPedidos","handlePedido","nuevoValor","pedidoString","pedido","posM","indexOf","posH","substring","leerDatos","aux","handleTotal","limpiarHoja","saveOnline","usePedidos","placeholder","undefined","uploadOrderSheet","file","formData","FormData","append","postOrderSheetData","objOrderSheetData","emptyOrderSheetData","orderDate","costPrice","ImportarPedidos","orderSheetData","setOrderSheetData","orders","setOrders","text","active","alert","setAlert","sheetRef","style","Alert","severity","inputRef","files","orderSheetPdf","nameArchive","order","flexGrow","createTheme","palette","main","secondary","App","ThemeProvider","path","Clientes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6649fc23.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst DateContext = createContext()\r\nexport default DateContext","import React, { useContext } from 'react'\r\nimport { AppBar, Toolbar, TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DateContext from '../../context/DateContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  datePicker: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst AppBarCustom = () => {\r\n  const classes = useStyles()\r\n\r\n  const {fecha, handleChangeFecha} = useContext(DateContext)\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <TextField\r\n          className={classes.datePicker}\r\n          type=\"date\"\r\n          value={fecha}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={handleChangeFecha}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default AppBarCustom\r\n","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport  DesktopWindowsIcon  from \"@material-ui/icons/DesktopWindows\";\r\nimport  MoneyIcon  from \"@material-ui/icons/AttachMoney\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: \"0 10px\",\r\n  },\r\n  listItem: {\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      open\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        {/* <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link> */}\r\n        <Link to=\"/clientes\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Clientes\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Hoja de Pedidos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/pagos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <MoneyIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pagos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/importarpedidos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <ImportExportIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Importar pedidos\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DateContext from \"./DateContext\";\r\n\r\nconst DateState = ({ children }) => {\r\n  const [fecha, setFecha] = useState(\"aaaa-mm-dd\");\r\n\r\n  const handleChangeFecha = (e) => {\r\n    setFecha(e.target.value);\r\n    localStorage.setItem(\"fecha\", e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"fecha\")){\r\n      setFecha(localStorage.getItem(\"fecha\"));\r\n    } else {\r\n      const hoy = new Date().toLocaleString('es-ES', {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n      const hoyParsed = hoy.split(\"/\").reverse().join(\"-\")\r\n      setFecha(hoyParsed);\r\n    }\r\n    // eslint-disable-line\r\n  }, [])\r\n\r\n  return (\r\n    <DateContext.Provider\r\n      value={{\r\n        fecha,\r\n        handleChangeFecha,\r\n      }}\r\n    >\r\n      {children}\r\n    </DateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DateState;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    // width: 900,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  modalContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: 'wrap',\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    width: '700px'\r\n  },\r\n}));","import { Card, Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ModalForm = ({ open, handleOpen, handleSubmit, children, titleForm }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleOpen}\r\n      className={classes.modalContainer}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <Card variant=\"outlined\" className={classes.modal}>\r\n        <h2 id=\"simple-modal-title\">{titleForm}</h2>\r\n        <form id=\"simple-modal-description\" className={classes.form} onSubmit={handleSubmit}>\r\n          {children}\r\n        </form>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialState, edit) => {\r\n\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    setForm({...edit});\r\n  }, [edit])\r\n\r\n  const handleChange = (prop) => (e) => {\r\n    if(e.target.type === \"checkbox\") {\r\n      setForm({ ...form, [prop]: e.target.checked });\r\n    } else {\r\n      setForm({ ...form, [prop]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const limpiarForm = () => {\r\n    if(!edit !== null) {\r\n      setForm({...initialState});\r\n    }\r\n  }\r\n\r\n  return {\r\n    form,\r\n    handleChange,\r\n    limpiarForm\r\n  }\r\n}\r\n\r\nexport default useForm","export const URL_BACKEND = 'https://610f216b9b698d00171752a0.mockapi.io'\r\nexport const URL_BACKEND_LOCAL = 'http://localhost:4000'","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getClientes = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente`)\r\n  return rpta\r\n}\r\n\r\nexport const getClientesActive = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente?estado=true`)\r\n  return rpta\r\n}\r\n\r\nexport const getClientesPaymentSheet = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente?paymentSheet=true`)\r\n  return rpta\r\n}\r\n\r\nexport const postCliente = async (objCliente) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/cliente`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putCliente = async (objCliente) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/cliente/${objCliente.id}`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}","import { useState } from \"react\";\r\n\r\nconst useOpen = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return {\r\n    open,\r\n    handleOpen\r\n  }\r\n}\r\n\r\nexport default useOpen","import {\r\n  Button,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { postCliente } from \"../../../services/clienteService\";\r\nimport useOpen from \"../hooks/useOpen\";\r\n\r\nconst formVacio = {\r\n  nombre: \"\",\r\n  price: \"\",\r\n  estado: true,\r\n  paymentSheet: true,\r\n  joinActive: true,\r\n  camal: \"\",\r\n  client: \"\"\r\n};\r\n\r\nconst ModalCliente = ({ addCliente }) => {\r\n\r\n  const { form, handleChange, limpiarForm } = useForm({ ...formVacio });\r\n  const { open, handleOpen } = useOpen();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postCliente({ ...form }).then((rpta) => {\r\n      if (rpta.request.status === 201) {\r\n        handleOpen();\r\n        limpiarForm();\r\n        addCliente(rpta.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n          Nuevo\r\n        </Button>\r\n      </div>\r\n      <ModalForm\r\n        open={open}\r\n        handleOpen={handleOpen}\r\n        handleSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          label=\"Nombre\"\r\n          value={form.nombre}\r\n          onChange={handleChange(\"nombre\")}\r\n        />\r\n        <TextField\r\n          label=\"Camal\"\r\n          value={form.camal}\r\n          onChange={handleChange(\"camal\")}\r\n        />\r\n        <TextField\r\n          label=\"Precio extra\"\r\n          type=\"number\"\r\n          value={form.price}\r\n          onChange={handleChange(\"price\")}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">S/.</InputAdornment>,\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Pertenece a\"\r\n          value={form.client}\r\n          onChange={handleChange(\"client\")}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.estado}\r\n              onChange={handleChange(\"estado\")}\r\n              name=\"estado\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pedidos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.paymentSheet}\r\n              onChange={handleChange(\"paymentSheet\")}\r\n              name=\"paymentSheet\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.paymentSheet ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pagos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.joinActive}\r\n              onChange={handleChange(\"joinActive\")}\r\n              name=\"joinActive\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.joinActive ? \"Sumar\" : \"No sumar\"}\r\n          label=\"Sumar\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Guardar\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            limpiarForm();\r\n            handleOpen();\r\n          }}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </ModalForm>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCliente;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getClientes, getClientesActive, getClientesPaymentSheet } from \"../services/clienteService\";\r\n\r\nconst useClientes = (mode='all') => {\r\n  const [clientes, setClientes] = useState([])\r\n\r\n  const addCliente = (objCliente) => {\r\n    setClientes([...clientes, objCliente])\r\n  }\r\n\r\n  const loadClientesActive = () => {\r\n    getClientesActive().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientesActive', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientesActive')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientesActive')))\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadClientesPaymentSheet = () => {\r\n    getClientesPaymentSheet().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientesPaymentSheet', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientesPaymentSheet')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientesPaymentSheet')))\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadAllClientes = () => {\r\n    getClientes().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientes', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientes')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientes')))\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if(active) loadClientesActive()\r\n    // else loadAllClientes()\r\n    switch (mode) {\r\n      case 'active':\r\n        loadClientesActive()\r\n      break\r\n\r\n      case 'payment':\r\n        loadClientesPaymentSheet()\r\n      break\r\n\r\n      default: \r\n        loadAllClientes()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    clientes,\r\n    addCliente,\r\n    loadAllClientes,\r\n    loadClientesActive,\r\n    loadClientesPaymentSheet\r\n  }\r\n}\r\n\r\nexport default useClientes","import {\r\n  Button,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { putCliente } from \"../../../services/clienteService\";\r\n\r\nconst ModalClienteEditar = ({ loadClientes, open, handleOpen, clienteEdit }) => {\r\n  const { form, handleChange } = useForm(null, clienteEdit);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    putCliente({ ...form }).then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        handleOpen();\r\n        loadClientes()\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {form ? (\r\n        <ModalForm\r\n          open={open}\r\n          handleOpen={handleOpen}\r\n          handleSubmit={handleSubmit}\r\n        >\r\n          <TextField\r\n            label=\"Nombre\"\r\n            value={form.nombre}\r\n            onChange={handleChange(\"nombre\")}\r\n          />\r\n          <TextField\r\n            label=\"Camal\"\r\n            value={form.camal}\r\n            onChange={handleChange(\"camal\")}\r\n          />\r\n          <TextField\r\n            label=\"Precio extra\"\r\n            type=\"number\"\r\n            value={form.price}\r\n            onChange={handleChange(\"price\")}\r\n            InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">S/.</InputAdornment>,\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Pertenece a\"\r\n            value={form.client}\r\n            onChange={handleChange(\"client\")}\r\n          />\r\n          <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.estado}\r\n              onChange={handleChange(\"estado\")}\r\n              name=\"estado\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pedidos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.paymentSheet}\r\n              onChange={handleChange(\"paymentSheet\")}\r\n              name=\"paymentSheet\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.paymentSheet ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pagos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.joinActive}\r\n              onChange={handleChange(\"joinActive\")}\r\n              name=\"joinActive\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.joinActive ? \"Sumar\" : \"No sumar\"}\r\n          label=\"Sumar\"\r\n        />\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Guardar\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n        </ModalForm>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalClienteEditar;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst TablaCliente = ({ clientes, handleOpen, setClienteEdit }) => {\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {[\"Nombre\", \"Camal\", \"Hoja Pedido\", \"Precio\", \"Pertenece a\", \"Sumar\", \"Hoja Pago\"].map((cellHead) => (\r\n              <TableCell key={cellHead}>{cellHead}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clientes.map((cliente, i) => (\r\n            <TableRow\r\n              key={`row${i}`}\r\n              onClick={() => {\r\n                setClienteEdit({ ...cliente });\r\n                handleOpen();\r\n              }}\r\n            >\r\n              {[\"nombre\", \"camal\", \"estado\", \"price\", \"client\", \"joinActive\", \"paymentSheet\"].map((column, j) => {\r\n                if (column === \"estado\" || column === \"paymentSheet\" || column === \"joinActive\") {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column] === true ? \"Activo\" : \"Desactivo\"}\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column]}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TablaCliente;\r\n","import React, { useState } from \"react\";\r\nimport ModalCliente from \"./components/ModalCliente\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport ModalClienteEditar from \"./components/ModalClienteEditar\";\r\nimport TablaCliente from \"./components/TablaCliente\";\r\nimport useOpen from \"./hooks/useOpen\";\r\n\r\nconst ClientesView = () => {\r\n\r\n  const { clientes, addCliente, loadAllClientes } = useClientes()\r\n\r\n  const [clienteEdit, setClienteEdit] = useState(null)\r\n\r\n  const { open: openEdit, handleOpen: handleOpenEdit} = useOpen()\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <ModalCliente addCliente={addCliente}/>\r\n      <ModalClienteEditar open={openEdit} handleOpen={handleOpenEdit} clienteEdit={clienteEdit} loadClientes={loadAllClientes}/>\r\n      <TablaCliente clientes={clientes} handleOpen={handleOpenEdit} setClienteEdit={setClienteEdit}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientesView;\r\n","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getPaymentSheetByDate = async (fecha) => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/paymentSheet?fecha=${fecha}`)\r\n  return rpta\r\n}\r\n\r\nexport const postPaymentSheet = async (objPaymentSheet) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/paymentSheet`,\r\n    JSON.stringify(objPaymentSheet),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putPaymentSheet = async (objPaymentSheet) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/paymentSheet/${objPaymentSheet.id}`,\r\n  JSON.stringify(objPaymentSheet),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport DateContext from \"../../context/DateContext\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport { getPaymentSheetByDate, postPaymentSheet, putPaymentSheet } from \"../../services/paymentSheetService\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst hojaPagosVacia = {\r\n  importePerla: \"\",\r\n  totalPagos: \"\",\r\n  pagosFalto: \"\",\r\n  saldoAnterior: \"\",\r\n  pollosMuertos: \"\",\r\n  saldoActual: \"\"\r\n}\r\n\r\nconst HojaPagos = () => {\r\n  const { clientes } = useClientes('payment');\r\n  const [pagos, setPagos] = useState([]);\r\n  const [hojaPagos, setHojaPagos] = useState({ ...hojaPagosVacia });\r\n  const classes = useStyles();\r\n  const hojaRef = useRef();\r\n  const { fecha } = useContext(DateContext);\r\n\r\n  // const handleChangePago2 = (i, e) => {\r\n  //   const pagosCopy = [...pagos];\r\n  //   const hojaPagosCopy = { ...hojaPagos };\r\n  //   const nuevoValor = leerPago(e.target.value)\r\n  //   let aux = nuevoValor\r\n  //   if (hojaPagos.totalPagos !== \"\") {\r\n  //     aux += parseFloat(hojaPagos.totalPagos)\r\n  //   }\r\n  //   if (pagosCopy[i]) {\r\n  //     aux -= pagos[i].total\r\n  //   }\r\n  //   if (aux >= 0) {\r\n  //     pagosCopy[i] = {\r\n  //       pagoString: e.target.value,\r\n  //       total: nuevoValor\r\n  //     }\r\n  //     hojaPagosCopy.totalPagos = aux;\r\n  //     hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy);\r\n  //     setPagos(pagosCopy)\r\n  //     setHojaPagos(hojaPagosCopy);\r\n  //     localStorage.setItem(\"pagos\", JSON.stringify(pagosCopy));\r\n  //     localStorage.setItem(\"hojaPagos\", JSON.stringify({ ...hojaPagos, totalPagos: aux }));\r\n  //   } else {\r\n  //     e.target.value = pagos[i]?.pagoString || 0\r\n  //   }\r\n  // }\r\n\r\n  const handleChangePago = (i, e) => {\r\n    const pagosCopy = [...pagos];\r\n    const nuevoTotalPago = leerPago(e.target.value)\r\n    pagosCopy[i] = {\r\n      pagoString: e.target.value,\r\n      total: nuevoTotalPago\r\n    }\r\n    localStorage.setItem(\"pagos\", JSON.stringify(pagosCopy));\r\n    setPagos(pagosCopy)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const hojaPagosCopy = { ...hojaPagos };\r\n    hojaPagosCopy[e.target.name] = e.target.value;\r\n    hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy)\r\n    localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n    localStorage.setItem(\"saldoAnterior\", hojaPagosCopy.saldoActual);\r\n    setHojaPagos(hojaPagosCopy);\r\n  }\r\n\r\n  const calcularSaldo = (hojaPagos) => {\r\n    const { totalPagos, pagosFalto, pollosMuertos, saldoAnterior, importePerla } = hojaPagos\r\n    let saldo = 0;\r\n    saldo += (totalPagos === \"\" || isNaN(totalPagos)) ? 0 : parseFloat(totalPagos)\r\n    saldo += (pagosFalto === \"\" || isNaN(pagosFalto)) ? 0 : parseFloat(pagosFalto)\r\n    saldo += (pollosMuertos === \"\" || isNaN(pollosMuertos)) ? 0 : parseFloat(pollosMuertos)\r\n    saldo += (saldoAnterior === \"\" || isNaN(saldoAnterior)) ? 0 : parseFloat(saldoAnterior)\r\n    saldo -= (importePerla === \"\" || isNaN(importePerla)) ? 0 : parseFloat(importePerla)\r\n    return saldo.toFixed(2)\r\n  }\r\n\r\n  const leerPago = (pagoString) => {\r\n    let total = 0;\r\n    let arrayPago = pagoString.trim().toLowerCase().split(\"+\");\r\n    arrayPago.forEach((pago) => {\r\n      total += pago !== \"\" && parseFloat(pago)\r\n    });\r\n    return total;\r\n  }\r\n\r\n  const limpiarHoja = () => {\r\n    localStorage.removeItem(\"pagos\");\r\n    localStorage.removeItem(\"hojaPagos\");\r\n    if (localStorage.getItem(\"saldoAnterior\") && localStorage.getItem(\"saldoAnterior\") !== \"0\") {\r\n      const hojaPagosCopy = { ...hojaPagosVacia };\r\n      hojaPagosCopy.saldoAnterior = parseFloat(localStorage.getItem(\"saldoAnterior\"))\r\n      localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n      setHojaPagos(hojaPagosCopy);\r\n    } else {\r\n      setHojaPagos({ ...hojaPagosVacia })\r\n    }\r\n    setPagos([])\r\n  }\r\n\r\n  const onlineSave = () => {\r\n    const objPaymentSheet = {\r\n      fecha: fecha,\r\n      hojaPagos: hojaPagos,\r\n      pagos: pagos\r\n    }\r\n    getPaymentSheetByDate(fecha).then((res) => {\r\n      console.log(res);\r\n      if (res.data.length === 0) {\r\n        postPaymentSheet(objPaymentSheet)\r\n      } else {\r\n        putPaymentSheet({ ...objPaymentSheet, id: res.data[0].id })\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (fecha !== \"aaaa-mm-dd\") {\r\n      getPaymentSheetByDate(fecha).then((res) => {\r\n        let pagosTemp = [];\r\n        let hojaPagosTemp = {...hojaPagosVacia};\r\n        if (res.data.length !== 0) {\r\n          pagosTemp = res.data[0].pagos;\r\n          hojaPagosTemp = res.data[0].hojaPagos;\r\n        } else {\r\n          if (localStorage.getItem(\"pagos\")) {\r\n            pagosTemp = [...JSON.parse(localStorage.getItem(\"pagos\"))];\r\n          }\r\n          if (localStorage.getItem(\"hojaPagos\")) {\r\n            hojaPagosTemp = JSON.parse(localStorage.getItem(\"hojaPagos\"));\r\n          }\r\n        }\r\n        const yesterday = new Date(fecha);\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        getPaymentSheetByDate(yesterday.toISOString().split(\"T\")[0]).then((resYesterday) => {\r\n          if (resYesterday.data.length !== 0) {\r\n            hojaPagosTemp.saldoAnterior = resYesterday.data[0].hojaPagos.saldoActual;\r\n            hojaPagosTemp.saldoActual = calcularSaldo(hojaPagosTemp);\r\n          }\r\n          setPagos([...pagosTemp]);\r\n          setHojaPagos(hojaPagosTemp);\r\n        }).catch(() => {\r\n          setPagos([...pagosTemp]);\r\n          setHojaPagos(hojaPagosTemp);\r\n        })\r\n      }).catch((e) => {\r\n        console.log(e);\r\n        let pagosTemp = [];\r\n        let hojaPagosTemp = {...hojaPagosVacia};\r\n        if (localStorage.getItem(\"pagos\")) {\r\n          pagosTemp = [...JSON.parse(localStorage.getItem(\"pagos\"))];\r\n        }\r\n        if (localStorage.getItem(\"hojaPagos\")) {\r\n          hojaPagosTemp = JSON.parse(localStorage.getItem(\"hojaPagos\"));\r\n        }\r\n        setHojaPagos(hojaPagosTemp);\r\n        setPagos([...pagosTemp]);\r\n      })\r\n    }\r\n  }, [fecha]);\r\n\r\n  useEffect(() => {\r\n    const hojaPagosCopy = {...hojaPagos}\r\n    hojaPagosCopy.totalPagos = pagos.reduce((acc, pago) => acc + pago?.total || 0, 0).toFixed(2);\r\n    hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy);\r\n    localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n    setHojaPagos(hojaPagosCopy);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagos])\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.containerButtons}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n          Limpiar Hoja\r\n        </Button>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          )}\r\n          content={() => hojaRef.current}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onlineSave}>\r\n          Guardar online\r\n        </Button>\r\n      </div>\r\n      <TableContainer ref={hojaRef} className={classes.table}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Clientes\", \"Pagos\"].map((cellHead) => (\r\n                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {clientes.map((objCliente, i) => (\r\n              <TableRow key={i} className={classes[`row${i % 4}`]}>\r\n                <TableCell className={classes.bodyCell}>\r\n                  {objCliente.nombre}\r\n                </TableCell>\r\n                <TableCell className={classes.inputCell}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    value={pagos[i]?.pagoString ? pagos[i]?.pagoString : \"\"}\r\n                    onChange={(e) => {\r\n                      handleChangePago(i, e);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                TOTAL PAGOS\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  value={hojaPagos.totalPagos ? hojaPagos.totalPagos : \"\"}\r\n                  disabled\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                PAGOS FALTÓ\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"pagosFalto\"\r\n                  value={hojaPagos.pagosFalto}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                POLLOS MUERTOS\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"pollosMuertos\"\r\n                  value={hojaPagos.pollosMuertos}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                SALDO ANTERIOR PERLA\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"saldoAnterior\"\r\n                  value={hojaPagos.saldoAnterior}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                CUENTA DEL DIA\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"importePerla\"\r\n                  value={hojaPagos.importePerla}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                SALDO ACTUAL\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"saldoActual\"\r\n                  value={hojaPagos.saldoActual}\r\n                  disabled\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HojaPagos;\r\n","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getOrderSheetByDate = async (fecha) => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/orderSheet?fecha=${fecha}`)\r\n  return rpta\r\n}\r\n\r\nexport const postOrderSheet = async (objOrderSheet) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/orderSheet`,\r\n    JSON.stringify(objOrderSheet),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putOrderSheet = async (objOrderSheet) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/orderSheet/${objOrderSheet.id}`,\r\n    JSON.stringify(objOrderSheet),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport DateContext from \"../../context/DateContext\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport { getOrderSheetByDate, postOrderSheet, putOrderSheet } from \"../../services/hojaPedidosService\";\r\n\r\nconst hojaVacia = {\r\n  total: 0,\r\n  queda: 0,\r\n};\r\n\r\nexport const usePedidos = () => {\r\n  const { clientes } = useClientes('active');\r\n  const [ hojaPedido, setHojaPedido ] = useState({ ...hojaVacia });\r\n  const [ pedidos, setPedidos ] = useState([]);\r\n  const { fecha } = useContext(DateContext);\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem(\"hojaPedido\")) {\r\n  //     setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n  //   }\r\n  //   if (localStorage.getItem(\"pedidos\")) {\r\n  //     setPedidos([...pedidos, ...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if(fecha !== \"aaaa-mm-dd\") {\r\n      getOrderSheetByDate(fecha).then((res) => {\r\n        if (res.data.length !== 0) {\r\n          setHojaPedido(res.data[0].hojaPedido)\r\n          setPedidos(res.data[0].pedidos)\r\n        } else{\r\n          if (localStorage.getItem(\"hojaPedido\")) {\r\n            setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n          }\r\n          if (localStorage.getItem(\"pedidos\")) {\r\n            setPedidos([...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n          }\r\n        }\r\n      }).catch(() => {\r\n        if (localStorage.getItem(\"hojaPedido\")) {\r\n          setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n        }\r\n        if (localStorage.getItem(\"pedidos\")) {\r\n          setPedidos([...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n        }\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fecha])\r\n\r\n  const leerDatos = (pedidoString) => {\r\n    let total = 0;\r\n    let arrayPedido = pedidoString.trim().toLowerCase().split(\"+\");\r\n    arrayPedido.forEach((pedido) => {\r\n      const posM = pedido.indexOf(\"m\");\r\n      const posH = pedido.indexOf(\"h\");\r\n      if (posM !== -1) total += pedido.substring(0, posM) * 1;\r\n      if (posH !== -1) total += pedido.substring(0, posH) * 1;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const handlePedido = (i, e) => {\r\n    const nuevoValor = leerDatos(e.target.value)\r\n    let aux = 0;\r\n    aux = hojaPedido.queda * 1 - nuevoValor;\r\n    if (pedidos[i]) {\r\n      aux += pedidos[i].total;\r\n    }\r\n    if (aux >= 0) {\r\n      pedidos[i] = {\r\n        pedidoString: e.target.value,\r\n        total: nuevoValor\r\n      };\r\n      setHojaPedido({ ...hojaPedido, queda: aux });\r\n      localStorage.setItem(\"pedidos\", JSON.stringify(pedidos));\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify({ ...hojaPedido, queda: aux }));\r\n    } else {\r\n      e.target.value = pedidos[i]?.pedidoString || 0;\r\n    }\r\n  };\r\n\r\n  const handleTotal = (e) => {\r\n    if (e.target.value * 1 >= 0) {\r\n      const aux = e.target.value * 1;\r\n      const queda = aux - hojaPedido.total + hojaPedido.queda;\r\n      setHojaPedido({ ...hojaPedido, total: aux, queda: queda });\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify(hojaPedido));\r\n    }\r\n  };\r\n\r\n  const limpiarHoja = () => {\r\n    localStorage.removeItem(\"hojaPedido\");\r\n    localStorage.removeItem(\"pedidos\");\r\n    setHojaPedido({ ...hojaVacia })\r\n    setPedidos([])\r\n  };\r\n\r\n  const saveOnline = () => {\r\n    const objOrderSheet = {\r\n      fecha: fecha,\r\n      hojaPedido: hojaPedido,\r\n      pedidos: pedidos\r\n    }\r\n    getOrderSheetByDate(fecha).then((res) => {\r\n      if (res.data.length === 0) {\r\n        postOrderSheet(objOrderSheet)\r\n      } else{\r\n        objOrderSheet.id = res.data[0].id\r\n        putOrderSheet(objOrderSheet)\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n    saveOnline\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { usePedidos } from \"./hooks\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst HojaPedido = () => {\r\n  const {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n    saveOnline\r\n  } = usePedidos();\r\n\r\n  const classes = useStyles();\r\n\r\n  const hojaRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.containerButtons}>\r\n        <TextField\r\n          label=\"Total\"\r\n          value={hojaPedido.total !== 0 ? hojaPedido.total : \"\"}\r\n          placeholder=\"0\"\r\n          onChange={handleTotal}\r\n          type=\"number\"\r\n        />\r\n        <TextField\r\n          label=\"Queda\"\r\n          value={hojaPedido.queda !== 0 ? hojaPedido.queda : \"\"}\r\n          type=\"number\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n          Limpiar Hoja\r\n        </Button>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          )}\r\n          content={() => hojaRef.current}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={saveOnline}>\r\n          Guardar online\r\n        </Button>\r\n        {/* <a href={`https://wa.me/51948901251?document=${pedidos}`} target=\"_blank\">Enviar</a> */}\r\n      </div>\r\n      <TableContainer ref={hojaRef} className={classes.table}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Clientes\", \"N° de jabas\", \"Camal\"].map((cellHead) => (\r\n                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {clientes.map((objCliente, i) => (\r\n              <TableRow key={i} className={classes[`row${i%4}`]}>\r\n                <TableCell className={classes.bodyCell}>\r\n                  {objCliente.nombre}\r\n                </TableCell>\r\n                <TableCell className={classes.inputCell}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    value={\r\n                      pedidos[i]?.pedidoString === undefined ||\r\n                      pedidos[i]?.pedidoString === null\r\n                        ? \"\"\r\n                        : pedidos[i].pedidoString\r\n                    }\r\n                    onChange={(e) => {\r\n                      handlePedido(i, e);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {objCliente.camal}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HojaPedido;\r\n","import axios from 'axios'\r\nimport { URL_BACKEND_LOCAL } from '../environments/environment'\r\n\r\nexport const uploadOrderSheet = async (file) => {\r\n    let formData = new FormData();\r\n    formData.append(\"orderSheetPdf\", file)\r\n    const rpta = await axios.post(`${URL_BACKEND_LOCAL}/uploadOrderSheet`,\r\n        formData,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    return rpta\r\n}\r\n\r\nexport const postOrderSheetData = async (objOrderSheetData) => {\r\n    const rpta = await axios.post(`${URL_BACKEND_LOCAL}/orderSheet`,\r\n        JSON.stringify(objOrderSheetData),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    return rpta\r\n}","import {\r\n    TextField,\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { postOrderSheetData, uploadOrderSheet } from \"../../services/orderSheetService\";\r\n\r\nconst emptyOrderSheetData = {\r\n    orderDate: \"\",\r\n    costPrice: \"\"\r\n}\r\n\r\nconst ImportarPedidos = () => {\r\n\r\n    const [orderSheetData, setOrderSheetData] = useState(emptyOrderSheetData);\r\n    const [orders, setOrders] = useState([]);\r\n    const [alert, setAlert] = useState({\r\n        text: \"\",\r\n        active: false\r\n    });\r\n    const sheetRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"ordersOfOrdersSheet\")) {\r\n            setOrders(JSON.parse(localStorage.getItem(\"ordersOfOrdersSheet\")))\r\n        }\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        setOrderSheetData({\r\n            ...orderSheetData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const sendOrderSheet = () => {\r\n        if (orderSheetData.orderDate === \"\" || orderSheetData.costPrice === \"\" || sheetRef.current.files.length === 0) {\r\n            setAlert({\r\n                text: \"Por favor inserte todos los datos.\",\r\n                active: true\r\n            })\r\n            return\r\n        }\r\n        setAlert({\r\n            text: \"\",\r\n            active: false\r\n        })\r\n        const orderSheetPdf = sheetRef.current.files[0];\r\n        uploadOrderSheet(orderSheetPdf).then((res) => {\r\n            const nameArchive = res.data.nameArchive;\r\n            postOrderSheetData({ ...orderSheetData, nameArchive: nameArchive }).then((res) => {\r\n                if (res.status) {\r\n                    if (res.data.length === 0) {\r\n                        setAlert({\r\n                            text: \"Ocurrio un error, por favor inserte correctamente la fecha del pedido.\",\r\n                            active: true\r\n                        })\r\n                    } else {\r\n                        localStorage.setItem(\"ordersOfOrdersSheet\", JSON.stringify(res.data))\r\n                        setOrders(res.data)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            width: \"300px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"20px\"\r\n        }}>\r\n            {alert.active && <Alert severity=\"error\">{alert.text}</Alert>}\r\n            <TextField\r\n                label=\"Fecha de pedido\"\r\n                type=\"date\"\r\n                name=\"orderDate\"\r\n                value={orderSheetData.orderDate}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"Precio de costo\"\r\n                type=\"number\"\r\n                name=\"costPrice\"\r\n                value={orderSheetData.costPrice}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                label=\"Subir hoja de pedidos\"\r\n                type=\"file\"\r\n                inputRef={sheetRef}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={sendOrderSheet}>Importar pedidos</Button>\r\n            </div>\r\n            {orders.length !== 0 &&\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {[\"Nombre\", \"Cantidad\", \"KG\", \"Precio\", \"Pertenece a\"].map((cellHead) => (\r\n                                    <TableCell key={cellHead}>{cellHead}</TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {orders.map((order, i) => (\r\n                                <TableRow key={`row${i}`}>\r\n                                    {[\"customerName\", \"quantity\", \"weight\", \"price\", \"client\"].map((column, j) => {\r\n                                        return (\r\n                                            <TableCell key={`column${i}${j}`}>\r\n                                                {order[column]}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImportarPedidos;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  }\r\n}))","import { createTheme, ThemeProvider, Toolbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppBarCustom from \"./components/AppBar\";\nimport SideBar from \"./components/SideBar\";\nimport DateState from \"./context/DateState\";\nimport ClientesView from \"./pages/Clientes\";\nimport HojaPagos from \"./pages/HojaPagos\";\nimport HojaPedido from \"./pages/HojaPedido\";\nimport ImportarPedidos from \"./pages/ImportarPedidos\";\n// import Dashboard from \"./pages/Dashboard\";\n// import PedidosView from \"./pages/Pedidos\";\n// import ProductosView from \"./pages/Productos\";\nimport { useStyles } from \"./styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#212121\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <DateState>\n        <Router>\n          <div className={classes.root}>\n            <AppBarCustom />\n            <SideBar />\n            <div className={classes.content}>\n              <Toolbar />\n              <Switch>\n                <Route path=\"/clientes\">\n                  <ClientesView />\n                </Route>\n                <Route path=\"/importarpedidos\">\n                  <ImportarPedidos />\n                </Route>\n                <Route path=\"/pagos\">\n                  <HojaPagos />\n                </Route>\n                <Route path=\"/\">\n                  <HojaPedido />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </DateState>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}