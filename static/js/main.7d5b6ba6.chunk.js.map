{"version":3,"sources":["context/DateContext.js","components/AppBar/index.js","components/SideBar/index.js","context/DateState.js","components/ModalForm/styles.js","components/ModalForm/index.js","hooks/useForm.js","environments/environment.js","services/clienteService.js","pages/Clientes/hooks/useOpen.js","pages/Clientes/components/ModalCliente.js","hooks/useClientes.js","pages/Clientes/components/ModalClienteEditar.js","pages/Clientes/components/TablaCliente.js","pages/Clientes/index.js","pages/HojaPagos/styles.js","pages/HojaPagos/index.js","services/hojaPedidosService.js","pages/HojaPedido/hooks.js","pages/HojaPedido/styles.js","pages/HojaPedido/index.js","services/orderSheetService.js","pages/ImportarPedidos/index.js","styles.js","pages/Alerta/index.js","App.js","index.js"],"names":["DateContext","createContext","useStyles","makeStyles","theme","appBar","zIndex","drawer","toolbar","display","justifyContent","alignItems","datePicker","backgroundColor","borderRadius","padding","AppBarCustom","classes","useContext","fecha","handleChangeFecha","AppBar","position","className","Toolbar","TextField","type","value","InputLabelProps","shrink","onChange","root","width","flexShrink","drawerPaper","listItem","SideBar","Drawer","variant","open","paper","Divider","List","to","ListItem","button","ListItemIcon","ListItemText","primary","DateState","children","useState","setFecha","useEffect","localStorage","getItem","hoyParsed","Date","toLocaleString","year","month","day","split","reverse","join","Provider","e","target","setItem","modal","boxShadow","shadows","spacing","flexDirection","modalContainer","form","flexWrap","margin","ModalForm","handleOpen","handleSubmit","titleForm","Modal","onClose","aria-labelledby","aria-describedby","Card","id","onSubmit","useForm","initialState","edit","setForm","handleChange","prop","checked","trim","limpiarForm","URL_BACKEND","URL_BACKEND_LOCAL","getClientes","a","axios","get","rpta","getClientesActive","getClientesPaymentSheet","postCliente","objCliente","post","JSON","stringify","headers","putCliente","put","useOpen","setOpen","formVacio","nombre","nombrePrograma","price","estado","paymentSheet","joinActive","camal","client","ModalCliente","addCliente","Button","color","onClick","preventDefault","then","request","status","data","label","InputProps","startAdornment","InputAdornment","FormControlLabel","control","Switch","name","useClientes","mode","clientes","setClientes","loadClientesActive","catch","err","parse","loadClientesPaymentSheet","loadAllClientes","ModalClienteEditar","loadClientes","clienteEdit","TablaCliente","setClienteEdit","TableContainer","Table","size","aria-label","TableHead","TableRow","map","cellHead","TableCell","TableBody","cliente","i","column","j","ClientesView","openEdit","handleOpenEdit","containerButtons","gap","table","row0","row1","row2","row3","bodyCell","inputCell","hojaPagosVacia","importePerla","totalPagos","pagosFalto","saldoAnterior","pollosMuertos","saldoActual","HojaPagos","pagos","setPagos","hojaPagos","setHojaPagos","hojaRef","useRef","hojaPagosCopy","calcularSaldo","saldo","isNaN","parseFloat","toFixed","leerPago","pagoString","total","toLowerCase","forEach","pago","removeItem","trigger","content","current","ref","pagosCopy","nuevoTotalPago","hojaPagosAux","reduce","acc","handleChangePago","disabled","getOrderSheetByDate","postOrderSheet","objOrderSheet","putOrderSheet","hojaVacia","queda","HojaPedido","hojaPedido","setHojaPedido","pedidos","setPedidos","res","length","handlePedido","nuevoValor","pedidoString","pedido","posM","indexOf","posH","substring","leerDatos","aux","handleTotal","limpiarHoja","saveOnline","usePedidos","placeholder","undefined","uploadOrderSheet","file","formData","FormData","append","postOrderSheetData","objOrderSheetData","saveOrders","obj","emptyOrderSheetData","orderDate","costPrice","nameArchive","ImportarPedidos","orderSheetData","setOrderSheetData","enableButtonSave","setEnableButtonSave","totalQuantity","totalWeight","totalCost","dataOrders","setDataOrders","orders","setOrders","text","active","alert","setAlert","sheetRef","style","Alert","severity","inputRef","files","orderSheetPdf","order","flexGrow","importe","Alerta","borderColor","alignContent","height","fontWeight","alignSelf","marginTop","createTheme","palette","main","secondary","App","ThemeProvider","path","Clientes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d5b6ba6.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst DateContext = createContext()\r\nexport default DateContext","import React, { useContext } from 'react'\r\nimport { AppBar, Toolbar, TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DateContext from '../../context/DateContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  datePicker: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst AppBarCustom = () => {\r\n  const classes = useStyles()\r\n\r\n  const {fecha, handleChangeFecha} = useContext(DateContext)\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <TextField\r\n          className={classes.datePicker}\r\n          type=\"date\"\r\n          value={fecha}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={handleChangeFecha}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default AppBarCustom\r\n","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport  DesktopWindowsIcon  from \"@material-ui/icons/DesktopWindows\";\r\nimport  MoneyIcon  from \"@material-ui/icons/AttachMoney\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: \"0 10px\",\r\n  },\r\n  listItem: {\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      open\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        {/* <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link> */}\r\n        <Link to=\"/clientes\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Clientes\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Hoja de Pedidos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/pagos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <MoneyIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pagos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/importarpedidos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <ImportExportIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Importar pedidos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/alerta\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <ErrorOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Alerta\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DateContext from \"./DateContext\";\r\n\r\nconst DateState = ({ children }) => {\r\n  const [fecha, setFecha] = useState(\"aaaa-mm-dd\");\r\n\r\n  const handleChangeFecha = (e) => {\r\n    setFecha(e.target.value);\r\n    localStorage.setItem(\"fecha\", e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"fecha\")){\r\n      setFecha(localStorage.getItem(\"fecha\"));\r\n    } else {\r\n      const hoy = new Date().toLocaleString('es-ES', {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n      const hoyParsed = hoy.split(\"/\").reverse().join(\"-\")\r\n      setFecha(hoyParsed);\r\n    }\r\n    // eslint-disable-line\r\n  }, [])\r\n\r\n  return (\r\n    <DateContext.Provider\r\n      value={{\r\n        fecha,\r\n        handleChangeFecha,\r\n      }}\r\n    >\r\n      {children}\r\n    </DateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DateState;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    // width: 900,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  modalContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexWrap: 'wrap',\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    width: '700px'\r\n  },\r\n}));","import { Card, Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ModalForm = ({ open, handleOpen, handleSubmit, children, titleForm }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleOpen}\r\n      className={classes.modalContainer}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <Card variant=\"outlined\" className={classes.modal}>\r\n        <h2 id=\"simple-modal-title\">{titleForm}</h2>\r\n        <form id=\"simple-modal-description\" className={classes.form} onSubmit={handleSubmit}>\r\n          {children}\r\n        </form>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialState, edit) => {\r\n\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    setForm({...edit});\r\n  }, [edit])\r\n\r\n  const handleChange = (prop) => (e) => {\r\n    if(e.target.type === \"checkbox\") {\r\n      setForm({ ...form, [prop]: e.target.checked });\r\n    } else {\r\n      setForm({ ...form, [prop]: e.target.value.trim() });\r\n    }\r\n  };\r\n\r\n  const limpiarForm = () => {\r\n    if(!edit !== null) {\r\n      setForm({...initialState});\r\n    }\r\n  }\r\n\r\n  return {\r\n    form,\r\n    handleChange,\r\n    limpiarForm\r\n  }\r\n}\r\n\r\nexport default useForm","export const URL_BACKEND = 'https://610f216b9b698d00171752a0.mockapi.io'\r\nexport const URL_BACKEND_LOCAL = 'http://localhost:4000'","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getClientes = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente`)\r\n  return rpta\r\n}\r\n\r\nexport const getClientesActive = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente?estado=true`)\r\n  return rpta\r\n}\r\n\r\nexport const getClientesPaymentSheet = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente?paymentSheet=true`)\r\n  return rpta\r\n}\r\n\r\nexport const postCliente = async (objCliente) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/cliente`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putCliente = async (objCliente) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/cliente/${objCliente.id}`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}","import { useState } from \"react\";\r\n\r\nconst useOpen = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return {\r\n    open,\r\n    handleOpen\r\n  }\r\n}\r\n\r\nexport default useOpen","import {\r\n  Button,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { postCliente } from \"../../../services/clienteService\";\r\nimport useOpen from \"../hooks/useOpen\";\r\n\r\nconst formVacio = {\r\n  nombre: \"\",\r\n  nombrePrograma: \"\",\r\n  price: \"\",\r\n  estado: true,\r\n  paymentSheet: true,\r\n  joinActive: true,\r\n  camal: \"\",\r\n  client: \"\"\r\n};\r\n\r\nconst ModalCliente = ({ addCliente }) => {\r\n\r\n  const { form, handleChange, limpiarForm } = useForm({ ...formVacio });\r\n  const { open, handleOpen } = useOpen();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postCliente({ ...form }).then((rpta) => {\r\n      if (rpta.request.status === 201) {\r\n        handleOpen();\r\n        limpiarForm();\r\n        addCliente(rpta.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n          Nuevo\r\n        </Button>\r\n      </div>\r\n      <ModalForm\r\n        open={open}\r\n        handleOpen={handleOpen}\r\n        handleSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          label=\"Nombre\"\r\n          value={form.nombre}\r\n          onChange={handleChange(\"nombre\")}\r\n        />\r\n        <TextField\r\n          label=\"Camal\"\r\n          value={form.camal}\r\n          onChange={handleChange(\"camal\")}\r\n        />\r\n        <TextField\r\n          label=\"Nombre Programa\"\r\n          value={form.nombrePrograma}\r\n          onChange={handleChange(\"nombrePrograma\")}\r\n        />\r\n        <TextField\r\n          label=\"Precio extra\"\r\n          type=\"number\"\r\n          value={form.price}\r\n          onChange={handleChange(\"price\")}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">S/.</InputAdornment>,\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Pertenece a\"\r\n          value={form.client}\r\n          onChange={handleChange(\"client\")}\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.estado}\r\n              onChange={handleChange(\"estado\")}\r\n              name=\"estado\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pedidos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.paymentSheet}\r\n              onChange={handleChange(\"paymentSheet\")}\r\n              name=\"paymentSheet\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.paymentSheet ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pagos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.joinActive}\r\n              onChange={handleChange(\"joinActive\")}\r\n              name=\"joinActive\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.joinActive ? \"Sumar\" : \"No sumar\"}\r\n          label=\"Sumar\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Guardar\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            limpiarForm();\r\n            handleOpen();\r\n          }}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </ModalForm>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCliente;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getClientes, getClientesActive, getClientesPaymentSheet } from \"../services/clienteService\";\r\n\r\nconst useClientes = (mode='all') => {\r\n  const [clientes, setClientes] = useState([])\r\n\r\n  const addCliente = (objCliente) => {\r\n    setClientes([...clientes, objCliente])\r\n  }\r\n\r\n  const loadClientesActive = () => {\r\n    getClientesActive().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientesActive', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientesActive')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientesActive')))\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadClientesPaymentSheet = () => {\r\n    getClientesPaymentSheet().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientesPaymentSheet', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientesPaymentSheet')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientesPaymentSheet')))\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadAllClientes = () => {\r\n    getClientes().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientes', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientes')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientes')))\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if(active) loadClientesActive()\r\n    // else loadAllClientes()\r\n    switch (mode) {\r\n      case 'active':\r\n        loadClientesActive()\r\n      break\r\n\r\n      case 'payment':\r\n        loadClientesPaymentSheet()\r\n      break\r\n\r\n      default: \r\n        loadAllClientes()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    clientes,\r\n    addCliente,\r\n    loadAllClientes,\r\n    loadClientesActive,\r\n    loadClientesPaymentSheet\r\n  }\r\n}\r\n\r\nexport default useClientes","import {\r\n  Button,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { putCliente } from \"../../../services/clienteService\";\r\n\r\nconst ModalClienteEditar = ({ loadClientes, open, handleOpen, clienteEdit }) => {\r\n  const { form, handleChange } = useForm(null, clienteEdit);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    putCliente({ ...form }).then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        handleOpen();\r\n        loadClientes()\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {form ? (\r\n        <ModalForm\r\n          open={open}\r\n          handleOpen={handleOpen}\r\n          handleSubmit={handleSubmit}\r\n        >\r\n          <TextField\r\n            label=\"Nombre\"\r\n            value={form.nombre}\r\n            onChange={handleChange(\"nombre\")}\r\n          />\r\n          <TextField\r\n            label=\"Camal\"\r\n            value={form.camal}\r\n            onChange={handleChange(\"camal\")}\r\n          />\r\n          <TextField\r\n            label=\"Nombre Programa\"\r\n            value={form.nombrePrograma}\r\n            onChange={handleChange(\"nombrePrograma\")}\r\n          />\r\n          <TextField\r\n            label=\"Precio extra\"\r\n            type=\"number\"\r\n            value={form.price}\r\n            onChange={handleChange(\"price\")}\r\n            InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">S/.</InputAdornment>,\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Pertenece a\"\r\n            value={form.client}\r\n            onChange={handleChange(\"client\")}\r\n          />\r\n          <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.estado}\r\n              onChange={handleChange(\"estado\")}\r\n              name=\"estado\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pedidos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.paymentSheet}\r\n              onChange={handleChange(\"paymentSheet\")}\r\n              name=\"paymentSheet\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.paymentSheet ? \"Activo\" : \"Desactivo\"}\r\n          label=\"Hoja pagos\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.joinActive}\r\n              onChange={handleChange(\"joinActive\")}\r\n              name=\"joinActive\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          // label={form.joinActive ? \"Sumar\" : \"No sumar\"}\r\n          label=\"Sumar\"\r\n        />\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Guardar\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n        </ModalForm>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalClienteEditar;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst TablaCliente = ({ clientes, handleOpen, setClienteEdit }) => {\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {[\"Nombre\", \"Camal\", \"Hoja Pedido\", \"Nombre Programa\", \"Precio extra\", \"Sumar\", \"Hoja Pago\"].map((cellHead) => (\r\n              <TableCell key={cellHead}>{cellHead}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clientes.map((cliente, i) => (\r\n            <TableRow\r\n              key={`row${i}`}\r\n              onClick={() => {\r\n                setClienteEdit({ ...cliente });\r\n                handleOpen();\r\n              }}\r\n            >\r\n              {[\"nombre\", \"camal\", \"estado\", \"nombrePrograma\", \"price\", \"joinActive\", \"paymentSheet\"].map((column, j) => {\r\n                if (column === \"estado\" || column === \"paymentSheet\" || column === \"joinActive\") {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column] === true ? \"Activo\" : \"Desactivo\"}\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column]}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TablaCliente;\r\n","import React, { useState } from \"react\";\r\nimport ModalCliente from \"./components/ModalCliente\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport ModalClienteEditar from \"./components/ModalClienteEditar\";\r\nimport TablaCliente from \"./components/TablaCliente\";\r\nimport useOpen from \"./hooks/useOpen\";\r\n\r\nconst ClientesView = () => {\r\n\r\n  const { clientes, addCliente, loadAllClientes } = useClientes()\r\n\r\n  const [clienteEdit, setClienteEdit] = useState(null)\r\n\r\n  const { open: openEdit, handleOpen: handleOpenEdit} = useOpen()\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <ModalCliente addCliente={addCliente}/>\r\n      <ModalClienteEditar open={openEdit} handleOpen={handleOpenEdit} clienteEdit={clienteEdit} loadClientes={loadAllClientes}/>\r\n      <TablaCliente clientes={clientes} handleOpen={handleOpenEdit} setClienteEdit={setClienteEdit}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientesView;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\n// import DateContext from \"../../context/DateContext\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\n// import { getPaymentSheetByDate, postPaymentSheet, putPaymentSheet } from \"../../services/paymentSheetService\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst hojaPagosVacia = {\r\n  importePerla: 0,\r\n  totalPagos: 0,\r\n  pagosFalto: 0,\r\n  saldoAnterior: 0,\r\n  pollosMuertos: 0,\r\n  saldoActual: 0\r\n}\r\n\r\nconst HojaPagos = () => {\r\n  const { clientes } = useClientes('payment');\r\n  const [pagos, setPagos] = useState([]);\r\n  const [hojaPagos, setHojaPagos] = useState({ ...hojaPagosVacia });\r\n  const classes = useStyles();\r\n  const hojaRef = useRef();\r\n  // const { fecha } = useContext(DateContext);\r\n\r\n  // const handleChangePago2 = (i, e) => {\r\n  //   const pagosCopy = [...pagos];\r\n  //   const hojaPagosCopy = { ...hojaPagos };\r\n  //   const nuevoValor = leerPago(e.target.value)\r\n  //   let aux = nuevoValor\r\n  //   if (hojaPagos.totalPagos !== \"\") {\r\n  //     aux += parseFloat(hojaPagos.totalPagos)\r\n  //   }\r\n  //   if (pagosCopy[i]) {\r\n  //     aux -= pagos[i].total\r\n  //   }\r\n  //   if (aux >= 0) {\r\n  //     pagosCopy[i] = {\r\n  //       pagoString: e.target.value,\r\n  //       total: nuevoValor\r\n  //     }\r\n  //     hojaPagosCopy.totalPagos = aux;\r\n  //     hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy);\r\n  //     setPagos(pagosCopy)\r\n  //     setHojaPagos(hojaPagosCopy);\r\n  //     localStorage.setItem(\"pagos\", JSON.stringify(pagosCopy));\r\n  //     localStorage.setItem(\"hojaPagos\", JSON.stringify({ ...hojaPagos, totalPagos: aux }));\r\n  //   } else {\r\n  //     e.target.value = pagos[i]?.pagoString || 0\r\n  //   }\r\n  // }\r\n\r\n  const handleChangePago = (i, e) => {\r\n    const pagosCopy = [...pagos];\r\n    const nuevoTotalPago = leerPago(e.target.value)\r\n    pagosCopy[i] = {\r\n      pagoString: e.target.value,\r\n      total: nuevoTotalPago\r\n    }\r\n    \r\n    const hojaPagosAux = { ...hojaPagos }\r\n    hojaPagosAux.totalPagos = pagosCopy.reduce((acc, pago) => {\r\n      return acc + pago?.total || 0\r\n    }, 0).toFixed(2);\r\n    hojaPagosAux.saldoActual = hojaPagosAux.importePerla - hojaPagosAux.totalPagos;\r\n    localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosAux));\r\n    localStorage.setItem(\"pagos\", JSON.stringify(pagosCopy));\r\n    setHojaPagos(hojaPagosAux);\r\n    setPagos(pagosCopy);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const hojaPagosCopy = { ...hojaPagos };\r\n    hojaPagosCopy[e.target.name] = e.target.value;\r\n    hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy)\r\n    localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n    localStorage.setItem(\"saldoAnterior\", hojaPagosCopy.saldoActual);\r\n    setHojaPagos(hojaPagosCopy);\r\n  }\r\n\r\n  const calcularSaldo = (hojaPagos) => {\r\n    const { totalPagos, pagosFalto, pollosMuertos, saldoAnterior, importePerla } = hojaPagos\r\n    let saldo = 0;\r\n    saldo += (totalPagos === \"\" || isNaN(totalPagos)) ? 0 : parseFloat(totalPagos)\r\n    saldo += (pagosFalto === \"\" || isNaN(pagosFalto)) ? 0 : parseFloat(pagosFalto)\r\n    saldo += (pollosMuertos === \"\" || isNaN(pollosMuertos)) ? 0 : parseFloat(pollosMuertos)\r\n    saldo += (saldoAnterior === \"\" || isNaN(saldoAnterior)) ? 0 : parseFloat(saldoAnterior)\r\n    saldo -= (importePerla === \"\" || isNaN(importePerla)) ? 0 : parseFloat(importePerla)\r\n    return saldo.toFixed(2)\r\n  }\r\n\r\n  const leerPago = (pagoString) => {\r\n    let total = 0;\r\n    let arrayPago = pagoString.trim().toLowerCase().split(\"+\");\r\n    arrayPago.forEach((pago) => {\r\n      total += pago !== \"\" && parseFloat(pago)\r\n    });\r\n    return total;\r\n  }\r\n\r\n  const limpiarHoja = () => {\r\n    localStorage.removeItem(\"pagos\");\r\n    setPagos([])\r\n  }\r\n\r\n  const actualizarTotalPagos = () => {\r\n    const hojaPagosCopy = { ...hojaPagos }\r\n    hojaPagosCopy.totalPagos = pagos.reduce((acc, pago) => {\r\n      return acc + pago?.total || 0\r\n    }, 0).toFixed(2);\r\n    hojaPagosCopy.saldoActual = calcularSaldo(hojaPagosCopy);\r\n    localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n    setHojaPagos(hojaPagosCopy);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.containerButtons}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n          Limpiar Hoja\r\n        </Button>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          )}\r\n          content={() => hojaRef.current}\r\n        />\r\n        {/* <Button variant=\"contained\" color=\"primary\" onClick={onlineSave}>\r\n          Guardar online\r\n        </Button> */}\r\n      </div>\r\n      <TableContainer ref={hojaRef} className={classes.table}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Clientes\", \"Pagos del día\", \"Total\"].map((cellHead) => (\r\n                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {clientes.map((objCliente, i) => (\r\n              <TableRow key={i} className={classes[`row${i % 4}`]}>\r\n                <TableCell className={classes.bodyCell}>\r\n                  {objCliente.nombre}\r\n                </TableCell>\r\n                <TableCell className={classes.inputCell}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    value={pagos[i]?.pagoString ? pagos[i]?.pagoString : \"\"}\r\n                    onChange={(e) => {\r\n                      handleChangePago(i, e);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"standard\"\r\n                    value={pagos[i]?.total ? pagos[i]?.total : \"\"}\r\n                    disabled\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                TOTAL PAGOS\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  value={hojaPagos.totalPagos ? hojaPagos.totalPagos : \"\"}\r\n                  disabled\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                PAGOS FALTÓ\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"pagosFalto\"\r\n                  value={hojaPagos.pagosFalto}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                POLLOS MUERTOS\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"pollosMuertos\"\r\n                  value={hojaPagos.pollosMuertos}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                SALDO ANTERIOR PERLA\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"saldoAnterior\"\r\n                  value={hojaPagos.saldoAnterior}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                CUENTA DEL DIA\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"importePerla\"\r\n                  value={hojaPagos.importePerla}\r\n                  onChange={handleChange}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.bodyCell}>\r\n                SALDO ACTUAL\r\n              </TableCell>\r\n              <TableCell className={classes.inputCell}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"filled\"\r\n                  name=\"saldoActual\"\r\n                  value={hojaPagos.saldoActual}\r\n                  disabled\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HojaPagos;\r\n","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getOrderSheetByDate = async (fecha) => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/orderSheet?fecha=${fecha}`)\r\n  return rpta\r\n}\r\n\r\nexport const postOrderSheet = async (objOrderSheet) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/orderSheet`,\r\n    JSON.stringify(objOrderSheet),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putOrderSheet = async (objOrderSheet) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/orderSheet/${objOrderSheet.id}`,\r\n    JSON.stringify(objOrderSheet),\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  )\r\n  return rpta;\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport DateContext from \"../../context/DateContext\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport { getOrderSheetByDate, postOrderSheet, putOrderSheet } from \"../../services/hojaPedidosService\";\r\n\r\nconst hojaVacia = {\r\n  total: 0,\r\n  queda: 0,\r\n};\r\n\r\nexport const usePedidos = () => {\r\n  const { clientes } = useClientes('active');\r\n  const [ hojaPedido, setHojaPedido ] = useState({ ...hojaVacia });\r\n  const [ pedidos, setPedidos ] = useState([]);\r\n  const { fecha } = useContext(DateContext);\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem(\"hojaPedido\")) {\r\n  //     setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n  //   }\r\n  //   if (localStorage.getItem(\"pedidos\")) {\r\n  //     setPedidos([...pedidos, ...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if(fecha !== \"aaaa-mm-dd\") {\r\n      getOrderSheetByDate(fecha).then((res) => {\r\n        if (res.data.length !== 0) {\r\n          setHojaPedido(res.data[0].hojaPedido)\r\n          setPedidos(res.data[0].pedidos)\r\n        } else{\r\n          if (localStorage.getItem(\"hojaPedido\")) {\r\n            setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n          }\r\n          if (localStorage.getItem(\"pedidos\")) {\r\n            setPedidos([...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n          }\r\n        }\r\n      }).catch(() => {\r\n        if (localStorage.getItem(\"hojaPedido\")) {\r\n          setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n        }\r\n        if (localStorage.getItem(\"pedidos\")) {\r\n          setPedidos([...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n        }\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fecha])\r\n\r\n  const leerDatos = (pedidoString) => {\r\n    let total = 0;\r\n    let arrayPedido = pedidoString.trim().toLowerCase().split(\"+\");\r\n    arrayPedido.forEach((pedido) => {\r\n      const posM = pedido.indexOf(\"m\");\r\n      const posH = pedido.indexOf(\"h\");\r\n      if (posM !== -1) total += pedido.substring(0, posM) * 1;\r\n      if (posH !== -1) total += pedido.substring(0, posH) * 1;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const handlePedido = (i, e) => {\r\n    const nuevoValor = leerDatos(e.target.value)\r\n    let aux = 0;\r\n    aux = hojaPedido.queda * 1 - nuevoValor;\r\n    if (pedidos[i]) {\r\n      aux += pedidos[i].total;\r\n    }\r\n    if (aux >= 0) {\r\n      pedidos[i] = {\r\n        pedidoString: e.target.value,\r\n        total: nuevoValor\r\n      };\r\n      setHojaPedido({ ...hojaPedido, queda: aux });\r\n      localStorage.setItem(\"pedidos\", JSON.stringify(pedidos));\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify({ ...hojaPedido, queda: aux }));\r\n    } else {\r\n      e.target.value = pedidos[i]?.pedidoString || 0;\r\n    }\r\n  };\r\n\r\n  const handleTotal = (e) => {\r\n    if (e.target.value * 1 >= 0) {\r\n      const aux = e.target.value * 1;\r\n      const queda = aux - hojaPedido.total + hojaPedido.queda;\r\n      setHojaPedido({ ...hojaPedido, total: aux, queda: queda });\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify(hojaPedido));\r\n    }\r\n  };\r\n\r\n  const limpiarHoja = () => {\r\n    localStorage.removeItem(\"hojaPedido\");\r\n    localStorage.removeItem(\"pedidos\");\r\n    setHojaPedido({ ...hojaVacia })\r\n    setPedidos([])\r\n  };\r\n\r\n  const saveOnline = () => {\r\n    const objOrderSheet = {\r\n      fecha: fecha,\r\n      hojaPedido: hojaPedido,\r\n      pedidos: pedidos\r\n    }\r\n    getOrderSheetByDate(fecha).then((res) => {\r\n      if (res.data.length === 0) {\r\n        postOrderSheet(objOrderSheet)\r\n      } else{\r\n        objOrderSheet.id = res.data[0].id\r\n        putOrderSheet(objOrderSheet)\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n    saveOnline\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { usePedidos } from \"./hooks\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst HojaPedido = () => {\r\n  const {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n    saveOnline\r\n  } = usePedidos();\r\n\r\n  const classes = useStyles();\r\n\r\n  const hojaRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.containerButtons}>\r\n        <TextField\r\n          label=\"Total\"\r\n          value={hojaPedido.total !== 0 ? hojaPedido.total : \"\"}\r\n          placeholder=\"0\"\r\n          onChange={handleTotal}\r\n          type=\"number\"\r\n        />\r\n        <TextField\r\n          label=\"Queda\"\r\n          value={hojaPedido.queda !== 0 ? hojaPedido.queda : \"\"}\r\n          type=\"number\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n          Limpiar Hoja\r\n        </Button>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          )}\r\n          content={() => hojaRef.current}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={saveOnline}>\r\n          Guardar online\r\n        </Button>\r\n        {/* <a href={`https://wa.me/51948901251?document=${pedidos}`} target=\"_blank\">Enviar</a> */}\r\n      </div>\r\n      <TableContainer ref={hojaRef} className={classes.table}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Clientes\", \"N° de jabas\", \"Camal\"].map((cellHead) => (\r\n                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {clientes.map((objCliente, i) => (\r\n              <TableRow key={i} className={classes[`row${i%4}`]}>\r\n                <TableCell className={classes.bodyCell}>\r\n                  {objCliente.nombre}\r\n                </TableCell>\r\n                <TableCell className={classes.inputCell}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    value={\r\n                      pedidos[i]?.pedidoString === undefined ||\r\n                      pedidos[i]?.pedidoString === null\r\n                        ? \"\"\r\n                        : pedidos[i].pedidoString\r\n                    }\r\n                    onChange={(e) => {\r\n                      handlePedido(i, e);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {objCliente.camal}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HojaPedido;\r\n","import axios from 'axios'\r\nimport { URL_BACKEND_LOCAL } from '../environments/environment'\r\n\r\nexport const uploadOrderSheet = async (file) => {\r\n    let formData = new FormData();\r\n    formData.append(\"orderSheetPdf\", file)\r\n    const rpta = await axios.post(`${URL_BACKEND_LOCAL}/uploadOrderSheet`,\r\n        formData,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    return rpta\r\n}\r\n\r\nexport const postOrderSheetData = async (objOrderSheetData) => {\r\n    const rpta = await axios.post(`${URL_BACKEND_LOCAL}/orderSheet`,\r\n        JSON.stringify(objOrderSheetData),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    return rpta\r\n}\r\n\r\nexport const saveOrders = async (obj) => {\r\n    const rpta = await axios.post(`${URL_BACKEND_LOCAL}/saveOrders`,\r\n        JSON.stringify(obj),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    return rpta\r\n}","import {\r\n    TextField,\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@material-ui/core\";\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useRef, useState } from \"react\";\r\nimport { postOrderSheetData, uploadOrderSheet, saveOrders } from \"../../services/orderSheetService\";\r\n\r\nconst emptyOrderSheetData = {\r\n    orderDate: \"\",\r\n    costPrice: \"\",\r\n    nameArchive: \"\"\r\n}\r\n\r\nconst ImportarPedidos = () => {\r\n\r\n    const [orderSheetData, setOrderSheetData] = useState(emptyOrderSheetData);\r\n    const [enableButtonSave, setEnableButtonSave] = useState(true);\r\n    const [dataOrders, setDataOrders] = useState({\r\n        totalQuantity: 0,\r\n        totalWeight: 0,\r\n        totalCost: 0\r\n    });\r\n    const [orders, setOrders] = useState([]);\r\n    const [alert, setAlert] = useState({\r\n        text: \"\",\r\n        active: false\r\n    });\r\n    const sheetRef = useRef();\r\n\r\n    // useEffect(() => {\r\n    //     if(localStorage.getItem(\"ordersOfOrdersSheet\")) {\r\n    //         setOrders(JSON.parse(localStorage.getItem(\"ordersOfOrdersSheet\")))\r\n    //     }\r\n    // }, [])\r\n\r\n    const handleChange = (e) => {\r\n        setOrderSheetData({\r\n            ...orderSheetData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const sendOrderSheet = () => {\r\n        if (orderSheetData.orderDate === \"\" || orderSheetData.costPrice === \"\" || sheetRef.current.files.length === 0) {\r\n            setAlert({\r\n                text: \"Por favor inserte todos los datos.\",\r\n                active: true\r\n            })\r\n            return\r\n        }\r\n        setAlert({\r\n            text: \"\",\r\n            active: false\r\n        })\r\n        const orderSheetPdf = sheetRef.current.files[0];\r\n        uploadOrderSheet(orderSheetPdf).then((res) => {\r\n            const nameArchive = res.data.nameArchive;\r\n            setOrderSheetData({\r\n                ...orderSheetData,\r\n                nameArchive: nameArchive\r\n            })\r\n            postOrderSheetData({ ...orderSheetData, nameArchive: nameArchive }).then((res) => {\r\n                if (res.status) {\r\n                    if (res.data.length === 0) {\r\n                        setAlert({\r\n                            text: \"Ocurrio un error, por favor inserte correctamente la fecha del pedido.\",\r\n                            active: true\r\n                        })\r\n                    } else {\r\n                        localStorage.setItem(\"ordersOfOrdersSheet\", JSON.stringify(res.data))\r\n                        setOrders(res.data.orders)\r\n                        setDataOrders(res.data.data)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSaveOrders = () => {\r\n        setEnableButtonSave(false)\r\n        saveOrders({orders: orders})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{\r\n            width: \"300px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"20px\"\r\n        }}>\r\n            {alert.active && <Alert severity=\"error\">{alert.text}</Alert>}\r\n            <TextField\r\n                label=\"Fecha de pedido\"\r\n                type=\"date\"\r\n                name=\"orderDate\"\r\n                value={orderSheetData.orderDate}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"Precio de costo\"\r\n                type=\"number\"\r\n                name=\"costPrice\"\r\n                value={orderSheetData.costPrice}\r\n                onChange={handleChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <TextField\r\n                label=\"Subir hoja de pedidos\"\r\n                type=\"file\"\r\n                inputRef={sheetRef}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={sendOrderSheet}>Importar pedidos</Button>\r\n            </div>\r\n            {orders.length !== 0 && orderSheetData.nameArchive &&\r\n                <>\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {[\"Nombre\", \"Cantidad\", \"KG\", \"Precio\", \"Nombre Programa\"].map((cellHead) => (\r\n                                    <TableCell key={cellHead}>{cellHead}</TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {orders.map((order, i) => (\r\n                                <TableRow key={`row${i}`}>\r\n                                    {[\"customerName\", \"quantity\", \"weight\", \"price\", \"nombrePrograma\"].map((column, j) => {\r\n                                        return (\r\n                                            <TableCell key={`column${i}${j}`}>\r\n                                                {order[column]}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            ))}\r\n                            {\r\n                                <TableRow>\r\n                                    <TableCell>Costo Total</TableCell>\r\n                                    <TableCell>{dataOrders.totalQuantity}</TableCell>\r\n                                    <TableCell>{dataOrders.totalWeight}</TableCell>\r\n                                    <TableCell>{dataOrders.totalCost}</TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSaveOrders} disabled={!enableButtonSave}>Guardar pedidos</Button>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImportarPedidos;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  }\r\n}))","import { Button, Card, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nconst formVacio = {\r\n  nombre: \"\",\r\n  importe: \"\",\r\n};\r\n\r\nconst Alerta = () => {\r\n  const { form, handleChange, limpiarForm } = useForm({ ...formVacio });\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: 'column', gap: \"50px\" }}>\r\n      <div style={{ display: \"flex\", gap: \"12px\" }}>\r\n        <TextField\r\n          label=\"Nombre\"\r\n          value={form.nombre}\r\n          onChange={handleChange(\"nombre\")}\r\n        />\r\n        <TextField\r\n          label=\"Importe\"\r\n          value={form.importe}\r\n          onChange={handleChange(\"importe\")}\r\n        />\r\n      </div>\r\n      <Card variant=\"outlined\"\r\n      // className={classes.modal}\r\n      style={{width: '450px', display: 'flex', flexDirection: 'column', gap: \"8px\", padding: '12px', borderRadius: '8px', borderColor: '#888'}}\r\n      >\r\n        <div style={{ display: \"flex\", gap: \"12px\", flexWrap: 'wrap', justifyContent: 'center', alignContent: 'center' }}>\r\n          <ErrorOutlineIcon color=\"error\" style={{height: '32px', width: '32px'}}/>\r\n          <h2>Ocurrio un error</h2>\r\n        </div>\r\n        <p style={{fontWeight: 'bold'}}>Descripción del error:</p>\r\n        <p>{`No se puede crear el pedido, el cliente ${form.nombre || ''} tiene una deuda de S/.${form.importe || ''}`}</p>\r\n        <Button style={{alignSelf: 'flex-end', marginTop: '6px'}} onClick={limpiarForm}>CERRAR</Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alerta;\r\n","import { createTheme, ThemeProvider, Toolbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppBarCustom from \"./components/AppBar\";\nimport SideBar from \"./components/SideBar\";\nimport DateState from \"./context/DateState\";\nimport ClientesView from \"./pages/Clientes\";\nimport HojaPagos from \"./pages/HojaPagos\";\nimport HojaPedido from \"./pages/HojaPedido\";\nimport ImportarPedidos from \"./pages/ImportarPedidos\";\n// import Dashboard from \"./pages/Dashboard\";\n// import PedidosView from \"./pages/Pedidos\";\n// import ProductosView from \"./pages/Productos\";\nimport { useStyles } from \"./styles\";\nimport Alerta from \"./pages/Alerta\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#212121\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <DateState>\n        <Router>\n          <div className={classes.root}>\n            <AppBarCustom />\n            <SideBar />\n            <div className={classes.content}>\n              <Toolbar />\n              <Switch>\n                <Route path=\"/alerta\">\n                  <Alerta />\n                </Route>\n                <Route path=\"/clientes\">\n                  <ClientesView />\n                </Route>\n                <Route path=\"/importarpedidos\">\n                  <ImportarPedidos />\n                </Route>\n                <Route path=\"/pagos\">\n                  <HojaPagos />\n                </Route>\n                <Route path=\"/\">\n                  <HojaPedido />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </DateState>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}