{"version":3,"sources":["context/DateContext.js","components/AppBar/index.js","components/SideBar/index.js","context/DateState.js","components/ModalForm/styles.js","components/ModalForm/index.js","hooks/useForm.js","environments/environment.js","services/clienteService.js","pages/Clientes/hooks/useOpen.js","pages/Clientes/components/ModalCliente.js","hooks/useClientes.js","pages/Clientes/components/ModalClienteEditar.js","pages/Clientes/components/TablaCliente.js","pages/Clientes/index.js","pages/HojaPagos/styles.js","pages/HojaPagos/index.js","pages/HojaPedido/hooks.js","pages/HojaPedido/styles.js","pages/HojaPedido/index.js","styles.js","App.js","index.js"],"names":["DateContext","createContext","useStyles","makeStyles","theme","appBar","zIndex","drawer","toolbar","display","justifyContent","alignItems","datePicker","backgroundColor","borderRadius","padding","AppBarCustom","classes","useContext","fecha","handleChangeFecha","AppBar","position","className","Toolbar","TextField","type","value","InputLabelProps","shrink","onChange","root","width","flexShrink","drawerPaper","listItem","SideBar","Drawer","variant","open","paper","Divider","List","to","ListItem","button","ListItemIcon","ListItemText","primary","DateState","children","useState","setFecha","useEffect","localStorage","getItem","hoyParsed","Date","toLocaleString","year","month","day","split","reverse","join","Provider","e","target","setItem","modal","boxShadow","shadows","spacing","flexDirection","modalContainer","form","flexWrap","margin","ModalForm","handleOpen","handleSubmit","titleForm","Modal","onClose","aria-labelledby","aria-describedby","Card","id","onSubmit","useForm","initialState","edit","setForm","handleChange","prop","checked","limpiarForm","URL_BACKEND","getClientes","a","axios","get","rpta","getClientesActive","postCliente","objCliente","post","JSON","stringify","headers","putCliente","put","useOpen","setOpen","formVacio","nombre","precio","saldo","estado","ModalCliente","addCliente","Button","color","onClick","preventDefault","then","request","status","data","label","camal","FormControlLabel","control","Switch","name","useClientes","active","clientes","setClientes","loadClientesActive","catch","err","parse","loadAllClientes","ModalClienteEditar","loadClientes","clienteEdit","TablaCliente","setClienteEdit","TableContainer","Table","size","aria-label","TableHead","TableRow","map","cellHead","TableCell","TableBody","cliente","i","column","j","ClientesView","openEdit","handleOpenEdit","containerButtons","gap","table","row0","row1","row2","row3","bodyCell","inputCell","hojaPagosVacia","importePerla","totalPagos","diferencia","HojaPagos","pagos","setPagos","hojaPagos","setHojaPagos","hojaRef","useRef","hojaPagosCopy","parseFloat","removeItem","trigger","content","current","ref","pagosCopy","iTotal","reduce","previousValues","currentValue","handleChangePago","hojaVacia","total","queda","HojaPedido","hojaPedido","setHojaPedido","pedidos","setPedidos","handlePedido","nuevoValor","pedidoString","trim","toLowerCase","forEach","pedido","posM","indexOf","posH","substring","leerDatos","aux","handleTotal","limpiarHoja","usePedidos","placeholder","undefined","flexGrow","createTheme","palette","main","secondary","App","ThemeProvider","path","Clientes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ba790eb.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst DateContext = createContext()\r\nexport default DateContext","import React, { useContext } from 'react'\r\nimport { AppBar, Toolbar, TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DateContext from '../../context/DateContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  datePicker: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst AppBarCustom = () => {\r\n  const classes = useStyles()\r\n\r\n  const {fecha, handleChangeFecha} = useContext(DateContext)\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <TextField\r\n          className={classes.datePicker}\r\n          type=\"date\"\r\n          value={fecha}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={handleChangeFecha}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default AppBarCustom\r\n","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport  DesktopWindowsIcon  from \"@material-ui/icons/DesktopWindows\";\r\nimport  MoneyIcon  from \"@material-ui/icons/AttachMoney\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: \"0 10px\",\r\n  },\r\n  listItem: {\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nconst SideBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      open\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <Divider />\r\n      <List>\r\n        {/* <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link> */}\r\n        <Link to=\"/clientes\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Clientes\" />\r\n          </ListItem>\r\n        </Link>\r\n        {/* <Link to=\"/productos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Productos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/pedidos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pedidos\" />\r\n          </ListItem>\r\n        </Link> */}\r\n        <Link to=\"/\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <DesktopWindowsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Hoja de Pedidos\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/pagos\">\r\n          <ListItem button className={classes.listItem}>\r\n            <ListItemIcon>\r\n              <MoneyIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Pagos\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DateContext from \"./DateContext\";\r\n\r\nconst DateState = ({ children }) => {\r\n  const [fecha, setFecha] = useState(\"aaaa-mm-dd\");\r\n\r\n  const handleChangeFecha = (e) => {\r\n    setFecha(e.target.value);\r\n    localStorage.setItem(\"fecha\", e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"fecha\")){\r\n      setFecha(localStorage.getItem(\"fecha\"));\r\n    } else {\r\n      const hoy = new Date().toLocaleString('es-ES', {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n      const hoyParsed = hoy.split(\"/\").reverse().join(\"-\")\r\n      setFecha(hoyParsed);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DateContext.Provider\r\n      value={{\r\n        fecha,\r\n        handleChangeFecha,\r\n      }}\r\n    >\r\n      {children}\r\n    </DateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DateState;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    // width: 900,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  modalContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));","import { Card, Modal } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ModalForm = ({ open, handleOpen, handleSubmit, children, titleForm }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleOpen}\r\n      className={classes.modalContainer}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <Card variant=\"outlined\" className={classes.modal}>\r\n        <h2 id=\"simple-modal-title\">{titleForm}</h2>\r\n        <form id=\"simple-modal-description\" className={classes.form} onSubmit={handleSubmit}>\r\n          {children}\r\n        </form>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForm;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialState, edit) => {\r\n\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    setForm({...edit});\r\n  }, [edit])\r\n\r\n  const handleChange = (prop) => (e) => {\r\n    if(e.target.type === \"checkbox\") {\r\n      setForm({ ...form, [prop]: e.target.checked });\r\n    } else {\r\n      setForm({ ...form, [prop]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const limpiarForm = () => {\r\n    if(!edit !== null) {\r\n      setForm({...initialState});\r\n    }\r\n  }\r\n\r\n  return {\r\n    form,\r\n    handleChange,\r\n    limpiarForm\r\n  }\r\n}\r\n\r\nexport default useForm","export const URL_BACKEND = 'https://610f216b9b698d00171752a0.mockapi.io'","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environment';\r\n\r\nexport const getClientes = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente`)\r\n  return rpta\r\n}\r\n\r\nexport const getClientesActive = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/cliente?estado=true`)\r\n  return rpta\r\n}\r\n\r\nexport const postCliente = async (objCliente) => {\r\n  const rpta = await axios.post(`${URL_BACKEND}/cliente`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}\r\n\r\nexport const putCliente = async (objCliente) => {\r\n  const rpta = await axios.put(`${URL_BACKEND}/cliente/${objCliente.id}`,\r\n  JSON.stringify(objCliente),\r\n  {headers: { \r\n    'Content-Type': 'application/json'\r\n  }}\r\n  )\r\n  return rpta;\r\n}","import { useState } from \"react\";\r\n\r\nconst useOpen = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return {\r\n    open,\r\n    handleOpen\r\n  }\r\n}\r\n\r\nexport default useOpen","import {\r\n  Button,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { postCliente } from \"../../../services/clienteService\";\r\nimport useOpen from \"../hooks/useOpen\";\r\n\r\nconst formVacio = {\r\n  nombre: \"\",\r\n  precio: \"\",\r\n  saldo: \"\",\r\n  estado: true,\r\n};\r\n\r\nconst ModalCliente = ({ addCliente }) => {\r\n  const { form, handleChange, limpiarForm } = useForm({ ...formVacio });\r\n  const { open, handleOpen } = useOpen();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postCliente({ ...form }).then((rpta) => {\r\n      if (rpta.request.status === 201) {\r\n        handleOpen();\r\n        limpiarForm();\r\n        addCliente(rpta.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n          Nuevo\r\n        </Button>\r\n      </div>\r\n      <ModalForm\r\n        open={open}\r\n        handleOpen={handleOpen}\r\n        handleSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          label=\"Nombre\"\r\n          value={form.nombre}\r\n          onChange={handleChange(\"nombre\")}\r\n        />\r\n        <TextField\r\n          label=\"Camal\"\r\n          value={form.camal}\r\n          onChange={handleChange(\"camal\")}\r\n        />\r\n        {/* <TextField\r\n          label=\"Precio\"\r\n          type=\"number\"\r\n          value={form.precio}\r\n          onChange={handleChange(\"precio\")}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">+</InputAdornment>,\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Saldo\"\r\n          type=\"number\"\r\n          value={form.saldo}\r\n          onChange={handleChange(\"saldo\")}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">S/.</InputAdornment>\r\n            ),\r\n          }}\r\n        /> */}\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={form.estado}\r\n              onChange={handleChange(\"estado\")}\r\n              name=\"estado\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Guardar\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            limpiarForm();\r\n            handleOpen();\r\n          }}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </ModalForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCliente;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport DateContext from \"../context/DateContext\";\r\nimport { getClientes, getClientesActive } from \"../services/clienteService\";\r\n\r\nconst useClientes = (active=false) => {\r\n  const { fecha } = useContext(DateContext);\r\n  const [clientes, setClientes] = useState([])\r\n\r\n  const addCliente = (objCliente) => {\r\n    setClientes([...clientes, objCliente])\r\n  }\r\n\r\n  const loadClientesActive = () => {\r\n    getClientesActive().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientes', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientes')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientes')))\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadAllClientes = () => {\r\n    getClientes().then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        setClientes(rpta.data);\r\n        localStorage.setItem('clientesActive', JSON.stringify(rpta.data));\r\n      }\r\n    }).catch((err) => {\r\n      if(localStorage.getItem('clientesActive')) {\r\n        setClientes(JSON.parse(localStorage.getItem('clientesActive')))\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(active) loadClientesActive()\r\n    else loadAllClientes()\r\n  }, [fecha]);\r\n\r\n  return {\r\n    clientes,\r\n    addCliente,\r\n    loadAllClientes,\r\n    loadClientesActive,\r\n  }\r\n}\r\n\r\nexport default useClientes","import {\r\n  Button,\r\n  FormControlLabel,\r\n  InputAdornment,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ModalForm from \"../../../components/ModalForm\";\r\nimport useForm from \"../../../hooks/useForm\";\r\nimport { putCliente } from \"../../../services/clienteService\";\r\n\r\nconst ModalClienteEditar = ({ loadClientes, open, handleOpen, clienteEdit }) => {\r\n  const { form, handleChange } = useForm(null, clienteEdit);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    putCliente({...form}).then((rpta) => {\r\n      if (rpta.request.status === 200) {\r\n        handleOpen();\r\n        loadClientes()\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {form ? (\r\n        <ModalForm\r\n          open={open}\r\n          handleOpen={handleOpen}\r\n          handleSubmit={handleSubmit}\r\n        >\r\n          <TextField\r\n            label=\"Nombre\"\r\n            value={form.nombre}\r\n            onChange={handleChange(\"nombre\")}\r\n          />\r\n          <TextField\r\n          label=\"Camal\"\r\n          value={form.camal}\r\n          onChange={handleChange(\"camal\")}\r\n        />\r\n          {/* <TextField\r\n            label=\"Precio\"\r\n            type=\"number\"\r\n            value={form.precio}\r\n            onChange={handleChange(\"precio\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">+</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Saldo\"\r\n            type=\"number\"\r\n            value={form.saldo}\r\n            onChange={handleChange(\"saldo\")}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/.</InputAdornment>\r\n              ),\r\n            }}\r\n          /> */}\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={form.estado}\r\n                onChange={handleChange(\"estado\")}\r\n                name=\"estado\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label={form.estado ? \"Activo\" : \"Desactivo\"}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Guardar\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n        </ModalForm>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalClienteEditar;\r\n","import React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst TablaCliente = ({ clientes, handleOpen, setClienteEdit }) => {\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {[\"Nombre\", \"Camal\", \"Estado\"].map((cellHead) => (\r\n              <TableCell key={cellHead}>{cellHead}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {clientes.map((cliente, i) => (\r\n            <TableRow\r\n              key={`row${i}`}\r\n              onClick={() => {\r\n                setClienteEdit({ ...cliente });\r\n                handleOpen();\r\n              }}\r\n            >\r\n              {[\"nombre\", \"camal\", \"estado\"].map((column, j) => {\r\n                if (column === \"estado\") {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column] === true ? \"Activo\" : \"Desactivo\"}\r\n                    </TableCell>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <TableCell key={`column${i}${j}`}>\r\n                      {cliente[column]}\r\n                    </TableCell>\r\n                  );\r\n                }\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TablaCliente;\r\n","import React, { useState } from \"react\";\r\nimport ModalCliente from \"./components/ModalCliente\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\nimport ModalClienteEditar from \"./components/ModalClienteEditar\";\r\nimport TablaCliente from \"./components/TablaCliente\";\r\nimport useOpen from \"./hooks/useOpen\";\r\n\r\nconst ClientesView = () => {\r\n\r\n  const { clientes, addCliente, loadAllClientes } = useClientes()\r\n\r\n  const [clienteEdit, setClienteEdit] = useState(null)\r\n\r\n  const { open: openEdit, handleOpen: handleOpenEdit} = useOpen()\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <ModalCliente addCliente={addCliente}/>\r\n      <ModalClienteEditar open={openEdit} handleOpen={handleOpenEdit} clienteEdit={clienteEdit} loadClientes={loadAllClientes}/>\r\n      <TablaCliente clientes={clientes} handleOpen={handleOpenEdit} setClienteEdit={setClienteEdit}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientesView;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TextField,\r\n    TableBody,\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\n//   import { usePedidos } from \"./hooks\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst hojaPagosVacia = {\r\n    importePerla: 0,\r\n    totalPagos: 0,\r\n    diferencia: 0\r\n}\r\n\r\nconst HojaPagos = () => {\r\n    // const {\r\n    //   hojaPedido,\r\n    //   pedidos,\r\n    //   clientes,\r\n    //   handlePedido,\r\n    //   handleTotal,\r\n    //   limpiarHoja,\r\n    // } = usePedidos();\r\n    const { clientes } = useClientes();\r\n    const [pagos, setPagos] = useState([]);\r\n    const [hojaPagos, setHojaPagos] = useState({...hojaPagosVacia});\r\n    const classes = useStyles();\r\n    const hojaRef = useRef();\r\n\r\n    const handleChangePago = (i, e) => {\r\n        const pagosCopy = [...pagos];\r\n        const hojaPagosCopy = { ...hojaPagos };\r\n        pagosCopy[i] = e.target.value;\r\n        const iTotal = pagosCopy.reduce((previousValues, currentValue) => {\r\n            return previousValues += currentValue ? parseFloat(currentValue) : 0\r\n        }\r\n            , 0);\r\n        hojaPagosCopy.totalPagos = iTotal;\r\n        hojaPagosCopy.diferencia = hojaPagosCopy.totalPagos - hojaPagosCopy.importePerla;\r\n        localStorage.setItem(\"pagos\", JSON.stringify(pagosCopy));\r\n        localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n        setPagos(pagosCopy);\r\n        setHojaPagos(hojaPagosCopy);\r\n    }\r\n\r\n    const handleChangePerla = (e) => {\r\n        const hojaPagosCopy = { ...hojaPagos };\r\n        hojaPagosCopy.importePerla = parseFloat(e.target.value);\r\n        hojaPagosCopy.diferencia = hojaPagosCopy.totalPagos - hojaPagosCopy.importePerla;\r\n        localStorage.setItem(\"hojaPagos\", JSON.stringify(hojaPagosCopy));\r\n        setHojaPagos(hojaPagosCopy);\r\n    }\r\n\r\n    const limpiarHoja = () => {\r\n        localStorage.removeItem(\"pagos\");\r\n        localStorage.removeItem(\"hojaPagos\");\r\n        setHojaPagos({ ...hojaPagosVacia })\r\n        setPagos([])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"pagos\")) {\r\n            setPagos([...pagos, ...JSON.parse(localStorage.getItem(\"pagos\"))]);\r\n        }\r\n        if (localStorage.getItem(\"hojaPagos\")) {\r\n            setHojaPagos(JSON.parse(localStorage.getItem(\"hojaPagos\")));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.containerButtons}>\r\n                <TextField\r\n                    label=\"Total Pagos\"\r\n                    value={hojaPagos.totalPagos}\r\n                    type=\"number\"\r\n                />\r\n                <TextField\r\n                    label=\"Perla\"\r\n                    value={hojaPagos.importePerla !== 0 ? hojaPagos.importePerla : \"\"}\r\n                    onChange={handleChangePerla}\r\n                    type=\"number\"\r\n                />\r\n                <TextField\r\n                    label=\"Diferencia\"\r\n                    value={hojaPagos.diferencia !== 0 ? hojaPagos.diferencia : \"\"}\r\n                    type=\"number\"\r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n                    Limpiar Hoja\r\n                </Button>\r\n                <ReactToPrint\r\n                    trigger={() => (\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Imprimir\r\n                        </Button>\r\n                    )}\r\n                    content={() => hojaRef.current}\r\n                />\r\n                {/* <a href={`https://wa.me/51948901251?document=${pedidos}`} target=\"_blank\">Enviar</a> */}\r\n            </div>\r\n            <TableContainer ref={hojaRef} className={classes.table}>\r\n                <Table size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {[\"Clientes\", \"Efectivo\", \"Banco\"].map((cellHead) => (\r\n                                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {clientes.map((objCliente, i) => (\r\n                            <TableRow key={i} className={classes[`row${i % 4}`]}>\r\n                                <TableCell className={classes.bodyCell}>\r\n                                    {objCliente.nombre}\r\n                                </TableCell>\r\n                                <TableCell className={classes.inputCell}>\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        variant=\"filled\"\r\n                                        type=\"number\"\r\n                                        value={pagos[i] ? pagos[i] : \"\"}\r\n                                        onChange={(e) => {\r\n                                            handleChangePago(i, e);\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell className={classes.inputCell}>\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        variant=\"filled\"\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HojaPagos;\r\n","import { useEffect, useState } from \"react\";\r\nimport useClientes from \"../../hooks/useClientes\";\r\n\r\nconst hojaVacia = {\r\n  total: 0,\r\n  queda: 0,\r\n};\r\n\r\nexport const usePedidos = () => {\r\n  const { clientes } = useClientes(true);\r\n  const [hojaPedido, setHojaPedido] = useState({ ...hojaVacia });\r\n  const [pedidos, setPedidos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"hojaPedido\")) {\r\n      setHojaPedido({ ...hojaPedido, ...JSON.parse(localStorage.getItem(\"hojaPedido\")) });\r\n    }\r\n    if (localStorage.getItem(\"pedidos\")) {\r\n      setPedidos([...pedidos, ...JSON.parse(localStorage.getItem(\"pedidos\"))]);\r\n    }\r\n  }, []);\r\n\r\n  const leerDatos = (pedidoString) => {\r\n    let total=0;\r\n    let arrayPedido = pedidoString.trim().toLowerCase().split(\"+\");\r\n    arrayPedido.forEach((pedido) => {\r\n      const posM = pedido.indexOf(\"m\");\r\n      const posH = pedido.indexOf(\"h\");\r\n      if (posM !== -1) total += pedido.substring(0, posM) * 1;\r\n      if (posH !== -1) total += pedido.substring(0, posH) * 1;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const handlePedido = (i, e) => {\r\n    const nuevoValor = leerDatos(e.target.value)\r\n    let aux = 0;\r\n    aux = hojaPedido.queda * 1 - nuevoValor;\r\n    if (pedidos[i]) {\r\n      aux += pedidos[i].total;\r\n    }\r\n    if (aux >= 0) {\r\n      pedidos[i] = {\r\n        pedidoString: e.target.value,\r\n        total: nuevoValor\r\n      };\r\n      setHojaPedido({...hojaPedido, queda: aux});\r\n      localStorage.setItem(\"pedidos\", JSON.stringify(pedidos));\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify({...hojaPedido, queda: aux}));\r\n    } else {\r\n      e.target.value = pedidos[i]?.pedidoString || 0;\r\n    }\r\n  };\r\n\r\n  const handleTotal = (e) => {\r\n    if (e.target.value * 1 >= 0) {\r\n      const aux = e.target.value * 1;\r\n      const queda = aux - hojaPedido.total + hojaPedido.queda;\r\n      setHojaPedido({ ...hojaPedido, total: aux, queda: queda});\r\n      localStorage.setItem(\"hojaPedido\", JSON.stringify(hojaPedido));\r\n    }\r\n  };\r\n\r\n  const limpiarHoja = () => {\r\n    localStorage.removeItem(\"hojaPedido\");\r\n    localStorage.removeItem(\"pedidos\");\r\n    setHojaPedido({...hojaVacia})\r\n    setPedidos([])\r\n  };\r\n\r\n  return {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  containerButtons: {\r\n    display: 'flex',\r\n    gap: \"20px\"\r\n  },\r\n  table: {\r\n    width: \"790px\",\r\n  },\r\n  row0: {\r\n    backgroundColor: \"#E7ECEF\"\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#E0F5EB\"\r\n  },\r\n  row2: {\r\n    backgroundColor: \"#FAF5B2\"\r\n  },\r\n  row3: {\r\n    backgroundColor: \"#B7D9F5\"\r\n  },\r\n  bodyCell: {\r\n    width: \"200px\",\r\n  },\r\n  inputCell: {\r\n    width: \"250px\",\r\n    padding: \"0\",\r\n    margin: \"0\",\r\n    \"& *\": {\r\n      padding: \"5px\",\r\n      margin: \"0\",\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"& .MuiFormControl-root.MuiTextField-root\": {\r\n      padding: \"0\"\r\n    }\r\n  }\r\n}))\r\n","import {\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  TableBody,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { usePedidos } from \"./hooks\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst HojaPedido = () => {\r\n  const {\r\n    hojaPedido,\r\n    pedidos,\r\n    clientes,\r\n    handlePedido,\r\n    handleTotal,\r\n    limpiarHoja,\r\n  } = usePedidos();\r\n\r\n  const classes = useStyles();\r\n\r\n  const hojaRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.containerButtons}>\r\n        <TextField\r\n          label=\"Total\"\r\n          value={hojaPedido.total !== 0 ? hojaPedido.total : \"\"}\r\n          placeholder=\"0\"\r\n          onChange={handleTotal}\r\n          type=\"number\"\r\n        />\r\n        <TextField\r\n          label=\"Queda\"\r\n          value={hojaPedido.queda !== 0 ? hojaPedido.queda : \"\"}\r\n          type=\"number\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={limpiarHoja}>\r\n          Limpiar Hoja\r\n        </Button>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              Imprimir\r\n            </Button>\r\n          )}\r\n          content={() => hojaRef.current}\r\n        />\r\n        {/* <a href={`https://wa.me/51948901251?document=${pedidos}`} target=\"_blank\">Enviar</a> */}\r\n      </div>\r\n      <TableContainer ref={hojaRef} className={classes.table}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {[\"Clientes\", \"N° de jabas\", \"Camal\"].map((cellHead) => (\r\n                <TableCell key={cellHead}>{cellHead}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {clientes.map((objCliente, i) => (\r\n              <TableRow key={i} className={classes[`row${i%4}`]}>\r\n                <TableCell className={classes.bodyCell}>\r\n                  {objCliente.nombre}\r\n                </TableCell>\r\n                <TableCell className={classes.inputCell}>\r\n                  <TextField\r\n                    size=\"small\"\r\n                    variant=\"filled\"\r\n                    value={\r\n                      pedidos[i]?.pedidoString === undefined ||\r\n                      pedidos[i]?.pedidoString === null\r\n                        ? \"\"\r\n                        : pedidos[i].pedidoString\r\n                    }\r\n                    onChange={(e) => {\r\n                      handlePedido(i, e);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {objCliente.camal}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HojaPedido;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  }\r\n}))","import { createTheme, ThemeProvider, Toolbar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AppBarCustom from \"./components/AppBar\";\nimport SideBar from \"./components/SideBar\";\nimport DateState from \"./context/DateState\";\nimport ClientesView from \"./pages/Clientes\";\nimport HojaPagos from \"./pages/HojaPagos\";\nimport HojaPedido from \"./pages/HojaPedido\";\n// import Dashboard from \"./pages/Dashboard\";\n// import PedidosView from \"./pages/Pedidos\";\n// import ProductosView from \"./pages/Productos\";\nimport { useStyles } from \"./styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#212121\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <DateState>\n        <Router>\n          <div className={classes.root}>\n            <AppBarCustom />\n            <SideBar />\n            <div className={classes.content}>\n              <Toolbar />\n              <Switch>\n                <Route path=\"/clientes\">\n                  <ClientesView />\n                </Route>\n                <Route path=\"/pagos\">\n                  <HojaPagos />\n                </Route>\n                {/* <Route path=\"/productos\">\n                  <ProductosView />\n                </Route>\n                <Route path=\"/pedidos\">\n                  <PedidosView />\n                </Route>\n                <Route path=\"/pagos\"></Route> */}\n                <Route path=\"/\">\n                  <HojaPedido />\n                </Route>\n                {/* <Route path=\"/\">\n                  <Dashboard />\n                </Route> */}\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </DateState>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}